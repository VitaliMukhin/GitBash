HW_1. The first part
Linux terminal (GitBash) commands

Домашнее задание - изучить основные команды:

1) Посмотреть где я:
pwd
---------------------------------
2) Создать папку:
mkdir folder
---------------------------------
3) Зайти в папку:
cd folder
---------------------------------
4) Создать 3 папки:
mkdir q1 q2 q3
OPTION:
-p //parents дает возможность создавать сразу вложенные папки:
mkdir -p q1/q2/q3
---------------------------------
5) Зайти в любоую папку:
cd q1
6) Создать 5 файлов (3 txt, 2 json):
touch 1.txt 2.txt 3.txt 1.json 2.json
7) Создать 3 папки:
mkdir q4 q5 q6
---------------------------------
8) Вывести список содержимого папки:
ls -l ./q1 //содержимое подпапки q1
ls -R      //рекрусивный, все вложенные директории
ls -la     //список файлов и папок в столбец с информацией
ls -1      //список файлов и папок в столбец
ls > 1.txt //список обьектов в ф-л 1.txt
---------------------------------
9) Открыть любой txt файл
10) Написать туда любой текст
11) Сохранить и выйти:
cat q1.txt    //просто выводит содержимое
cat >> q1.txt //войти в режим редактирования файла (добавить инф.)
cat > q1.txt  //создать файл и войти в режим редактирования 
ctrl+C        //сохранить ф-л и выйти из редактирования
---------------------------------
Быстро создать пустой файл:
>name.txt
Быстро создать файл  с текстом:
echo ‘privet’ > name.txt
--------------------------------- 
12) Выйти из папки на уровень выше: 
cd ..
---------------------------------
13) переместить любые 2 файла, которые вы создали, в любую другую папку:
mv 1.txt 2.txt /d/q1/q2
OPTION:
-f –force Не переспрашивает перезаписывать ли
-i -interactive Обезательно переспрашивает
-u -update Если наш файл новее, то перезапишет без вопросов
---------------------------------
14) скопировать любые 2 файла, которые вы создали, в любую другую папку:
cp 3.txt 1.json /d/q1/q2
OPTION:
-i  -interactive Обезательно переспрашивает перезаписывать ли
-p  - preserve Сохронять со ВСЕМИ атрибутами
-r  - recursive Рукурсивный, копирует дерикторию целиком с файлами и папками
-u  - update – Проверяет новый ли ф-л, если да – без вопросов перезаписывает
-v  - verbose, Информирует о всех действиях
---------------------------------
15) Найти файл по имени: 
find 1.txt – поиск только в данной дериктории
find -name 1.txt   //поиск и в поддерикториях, чувствителен к регистру
find -iname 1.txt  //независимо от регистра
find -size +1000k  //поиск ф-лов больше 1000к
find -size -1k     //поиск ф-лов меньше 1к
find -empty        //пустой файл
---------------------------------
16) Просмотреть поиск по содержимому: 
grep test q1.txt     //учитывает регистр 
grep -i test q1.txt  //НЕ учитывает регистр
grep -v test q1.txt  //выведены все надписи которые НЕ совпали с патерном
grep -c test q1.txt  //count, подсчитывает кол-во
grep -R test q1.txt  //рекрусивный, во вложенных папках
grep -Rc test ./q1   //кол-во в подпапке и ее подпапках
grep -c test ./*     //кол-во в нашей папке
---------------------------------
17) Вывести несколько первых строк из текстового файла
head q1.txt            //по умолчанию 10 перв строк
head -n8 q1.txt        //8 строк
head 1.txt>1_list.txt  //10 строк в ф-л пишет
---------------------------------
18) Вывести несколько последних строк из текстового файла
tail q1.txt               //по умолчанию 10 последних строк
tail -n8 q1.txt           //8 посл. строк
tail -f q1.txt            //отслеживает в реальном времени)
tail -f -s 5 q1.txt       //отслеживает в реальном времени, обновление 5 сек)
tail -f 1.txt | grep err  //выводит только строки с err
---------------------------------
19) Просмотреть содержимое длинного файла:
less 1.txt      //просмотр большого файла без редактирования 
less +F 1.txt   //мониторинг ф-ла
q               //выход
---------------------------------
20) Вывести дату и время
date  [ОПЦИИ] ... [+ФОРМАТ]
date +%T					//время = 03:53:25 
date +"Today is %d of %B"	//вставка в текст = Today is 26 of May
date --date='@1'			//дата = 1 января 1970 года плюс секунд
date +%x					//дата в локальном формате
date +%X					//время в локальном формате
date +'%d %D'               //сокращенная и полная дата
date +'%b %B'               //сокращенный и полный месяц
---------------------------------
Задание *
1)Отправить http запрос на сервер.
curl “http://162.55.220.72:5005/terminal-hw-request”
Ответ:
$ curl "http://162.55.220.72:5005/terminal-hw-request"
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   283  100   283    0     0   3663      0 --:--:-- --:--:-- --:--:--  3723{
  "Intro": "Hello!! This is your the first response from server",
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)",
    "result": [
      "Your_String",
      "Your_number"
    ]
  }
}

Запрос:
curl “http://162.55.220.72:5005/get_method?name=Name&age=1234”

Ответ:
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    24  100    24    0     0    329      0 --:--:-- --:--:-- --:--:--   333[
  "Name",
  "1234"
]
---------------------------------
2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13
#!/bin/bash
cd q1
mkdir q1 q2 q3
cd q1
touch 1.txt 2.txt 3.txt 1.json 2.json
mkdir q4 q5 q6
ls -l
mv 1.txt 2.txt /d/q1/q2
---------------------------------

